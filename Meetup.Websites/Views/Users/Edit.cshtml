@model Meetup.Websites.Models.UserEditorModel
@using Meetup.Entities;
@{
    ViewBag.Title = "Rediger Profile";
}

<div class="white-box">
    @Html.ActionLink("Ændre din kode", "ChangePassword", "Manage")
</div>

@using(Html.BeginForm("Edit", "Users", FormMethod.Post, new { role = "form", id = "user-edit-form", @class = "white-box normal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "invalid" })

    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "invalid" })
    @Html.LabelFor(m => m.Description)
    @Html.TextAreaFor(m => m.Description)

    <div class="form-group">
        @Html.ValidationMessageFor(m => m.Picture, "", new { @class = "invalid" })
        @Html.LabelFor(m => m.Picture)
        @Html.TextBoxFor(m => m.Picture, new {type = "file"})<br />
    </div>

    <div class="form-group">
        @Html.EditorFor(m => m.Address)
    </div>

    <div class="selection-list-pair">
        <div class="selection-list">
            <p>Erhverv:</p>
            <select multiple="multiple" id="business-list-unselected">
                @foreach(Business business in Model.UnselectedBusinesses)
                {
                    <option value="@business.Name">@business.Name</option>
                }
            </select>
        </div>
        <div class="selection-list">
            <p>Valgte erhverv:</p>
            <select multiple="multiple" id="business-list-selected">
                @foreach(Business business in Model.SelectedBusinesses)
                {
                    <option value="@business.Name">@business.Name</option>
                }
            </select>
        </div>
    </div>
    <div class="selection-list-pair">
        <div class="selection-list">
            <p>Intereser:</p>
            <select multiple="multiple" id="interest-list-unselected">
                @foreach(Interest interest in Model.UnselectedInterests)
                {
                    <option value="@interest.Name">@interest.Name</option>
                }
            </select>
        </div>
        <div class="selection-list">
            <p>Vaglte intereser:</p>
            <select multiple="multiple" id="interest-list-selected">
                @foreach(Interest interest in Model.SelectedInterests)
                {
                    <option value="@interest.Name">@interest.Name</option>
                }
            </select>
        </div>
    </div>

    <p>Organisationer:</p>
    <div id="organization-list">
        @for(int i = 0; i < Model.Organizations.Count; i++)
        {
            <div class="form-group">
                @Html.ValidationMessageFor(m => m.Organizations[i].Name, "", new { @class = "invalid" })
                @Html.LabelFor(m => m.Organizations[i].Name)
                <input list="organization-list@(i)" name="Organizations[@(i)].Name" id="Organizations[@(i)].Name" class="organization-edit" value="@Model.Organizations[i].Name" />
                <datalist id="organization-list@(i)" class="organization-holder"></datalist>

                @Html.ValidationMessageFor(m => m.Organizations[i].StartDate, "", new { @class = "invalid" })
                @Html.LabelFor(m => m.Organizations[i].StartDate)
                <input type="date" name="Organizations[@(i)].StartDate" id="Organizations[@(i)].StartDate" value="@(Model.Organizations[i].StartDate?.ToString("yyyy-MM-dd"))" />

                @Html.ValidationMessageFor(m => m.Organizations[i].EndDate, "", new { @class = "invalid" })
                @Html.LabelFor(m => m.Organizations[i].EndDate)
                <input type="date" name="Organizations[@(i)].EndDate" id="Organizations[@(i)].EndDate" value="@(Model.Organizations[i].EndDate?.ToString("yyyy-MM-dd"))" />
                @Html.HiddenFor(m => m.Organizations[i].State, new { @class = "organization-state" })
                @Html.HiddenFor(m => m.Organizations[i].Id)
                <button type="button" class="organization-remove">Slet</button>
            </div>
        }
    </div>
    <button type="button" id="organization-add">Add organization</button>

    <input type="submit" name="submitType" value="Gem" id="submit" class="button" />
}


@section Scripts {
    @Scripts.Render("~/Scripts/Users/edit-user.js")
    @Scripts.Render("~/Scripts/Shared/bus-int-list.js")
    @Scripts.Render("~/bundles/jqueryval")
}
