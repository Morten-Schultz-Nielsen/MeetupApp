@model Meetup.Websites.Models.SeanceViewModel
@using Meetup.Entities;
@using System.Linq;
<table class="seance-holder">
    @for(int i = 0; i < Model.Seances.Count; i++)
    {
        <tr class="seance">
            <th class="seance-time">
                <time datetime="@Model.Seances[i].BeginningTime.ToString()">Start: @Model.Seances[i].BeginningTime.ToString("HH:mm")</time>
                <time datetime="@Model.Seances[i].EndTime.ToString()">Slut: @Model.Seances[i].EndTime.ToString("HH:mm")</time>
            </th>
            @foreach(Meeting meeting in Model.Seances[i].Meetings)
            {
                <td class="meeting @(meeting.MeetingContainsUser(Model.UserId) ? "your-meeting" : "not-your-meeting")">
                    <a href="@Url.Action("Profile","Users",new {Id = meeting.UserOne.Id})">@meeting.UserOne.FullName</a>
                    <br />
                    <a href="@Url.Action("Profile","Users",new {Id = meeting.UserTwo.Id})">@meeting.UserTwo.FullName</a>
                </td>
            }
            @if(Model.Seances[i].UserPauses.Count != 0)
            {
                <td class="meeting-pause collapsed">
                    <p class="toggle-icon">+</p>
                    <p class="pause-text">Personer ikke i møder:<br /></p>
                    @foreach(UserPause pause in Model.Seances[i].UserPauses)
                    {
                        <a href="@Url.Action("Profile", "Users", new { Id = pause.UserId })">@pause.User.FullName</a>
                    }
                </td>
            }
        </tr>
    }
</table>
